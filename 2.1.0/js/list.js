tui.util.defineNamespace("fedoc.lnb",{"classes":[],"externals":[],"events":[],"globals":[{"comment":"/**\n * Bind DOM events\n * @param {HTMLElement} element - element to bind events\n * @param {string} type - events name\n * @param {function} handler - handler function or context for handler\n *  method\n * @param {object} [context] context - context for handler method.\n */","meta":{"range":[1943,3066],"filename":"domevent.js","lineno":75,"path":"/Users/minhyeong/Project/dom/src","code":{"id":"astnode100000124","name":"bindEvent","type":"FunctionDeclaration","paramnames":["element","type","handler","context"]},"vars":{"eventHandler":"bindEvent~eventHandler","mouseEnterHandler":"bindEvent~mouseEnterHandler","type":"bindEvent~type"},"shortpath":"file"},"description":"<p>Bind DOM events</p>","params":[{"type":{"names":["HTMLElement"]},"description":"<p>element to bind events</p>","name":"element"},{"type":{"names":["string"]},"description":"<p>events name</p>","name":"type"},{"type":{"names":["function"]},"description":"<p>handler function or context for handler<br> method</p>","name":"handler"},{"type":{"names":["object"]},"optional":true,"description":"<p>context - context for handler method.</p>","name":"context"}],"name":"bindEvent","longname":"bindEvent","kind":"function","scope":"global","___id":"T000002R000017","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"bindEvent","signature":"<span class=\"signature\">(element, type, handler, context<span class=\"signature-attributes\">opt</span>)</span><span class=\"type-signature\"></span>","ancestors":[]},{"comment":"/**\n * Forget memorized DOM event handlers\n * @param {HTMLElement} element - element to bind events\n * @param {string} type - events name\n * @param {function} keyFn - handler function that user passed at on() use\n */","meta":{"range":[1578,1670],"filename":"domevent.js","lineno":63,"path":"/Users/minhyeong/Project/dom/src","code":{"id":"astnode100000109","name":"forgetHandler","type":"FunctionDeclaration","paramnames":["element","type","keyFn"]},"shortpath":"file"},"description":"<p>Forget memorized DOM event handlers</p>","params":[{"type":{"names":["HTMLElement"]},"description":"<p>element to bind events</p>","name":"element"},{"type":{"names":["string"]},"description":"<p>events name</p>","name":"type"},{"type":{"names":["function"]},"description":"<p>handler function that user passed at on() use</p>","name":"keyFn"}],"name":"forgetHandler","longname":"forgetHandler","kind":"function","scope":"global","___id":"T000002R000016","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"forgetHandler","signature":"<span class=\"signature\">(element, type, keyFn)</span><span class=\"type-signature\"></span>","ancestors":[]},{"comment":"/**\n * Memorize DOM event handler for unbinding\n * @param {HTMLElement} element - element to bind events\n * @param {string} type - events name\n * @param {function} keyFn - handler function that user passed at on() use\n * @param {function} valueFn - handler function that wrapped by domevent for\n *  implementing some features\n */","meta":{"range":[1104,1359],"filename":"domevent.js","lineno":45,"path":"/Users/minhyeong/Project/dom/src","code":{"id":"astnode100000066","name":"memorizeHandler","type":"FunctionDeclaration","paramnames":["element","type","keyFn","valueFn"]},"vars":{"map":"memorizeHandler~map","items":"memorizeHandler~items"},"shortpath":"file"},"description":"<p>Memorize DOM event handler for unbinding</p>","params":[{"type":{"names":["HTMLElement"]},"description":"<p>element to bind events</p>","name":"element"},{"type":{"names":["string"]},"description":"<p>events name</p>","name":"type"},{"type":{"names":["function"]},"description":"<p>handler function that user passed at on() use</p>","name":"keyFn"},{"type":{"names":["function"]},"description":"<p>handler function that wrapped by domevent for<br> implementing some features</p>","name":"valueFn"}],"name":"memorizeHandler","longname":"memorizeHandler","kind":"function","scope":"global","___id":"T000002R000012","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"memorizeHandler","signature":"<span class=\"signature\">(element, type, keyFn, valueFn)</span><span class=\"type-signature\"></span>","ancestors":[]},{"comment":"/**\n * Get event collection for specific HTML element\n * @param {HTMLElement} element - HTML element\n * @param {string} [type] - event type\n * @returns {(object|Map)}\n */","meta":{"range":[424,772],"filename":"domevent.js","lineno":17,"path":"/Users/minhyeong/Project/dom/src","code":{"id":"astnode100000013","name":"safeEvent","type":"FunctionDeclaration","paramnames":["element","type"]},"vars":{"events":"safeEvent~events","element[undefined]":null,"handlerMap":"safeEvent~handlerMap","events[undefined]":"safeEvent~events.undefined]"},"shortpath":"file"},"description":"<p>Get event collection for specific HTML element</p>","params":[{"type":{"names":["HTMLElement"]},"description":"<p>HTML element</p>","name":"element"},{"type":{"names":["string"]},"optional":true,"description":"<p>event type</p>","name":"type"}],"returns":[{"type":{"names":["object","Map"]}}],"name":"safeEvent","longname":"safeEvent","kind":"function","scope":"global","___id":"T000002R000004","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"safeEvent","signature":"<span class=\"signature\">(element, type<span class=\"signature-attributes\">opt</span>)</span><span class=\"type-signature\"> &rarr; {object|Map}</span>","ancestors":[]},{"comment":"/**\n * Set className value\n * @param {(HTMLElement|SVGElement)} element - target element\n * @param {(string|string[])} cssClass - class names\n */","meta":{"range":[1885,2191],"filename":"domutil.js","lineno":81,"path":"/Users/minhyeong/Project/dom/src","code":{"id":"astnode100000818","name":"setClassName","type":"FunctionDeclaration","paramnames":["element","cssClass"]},"vars":{"cssClass":"setClassName~cssClass","element.className":"element.className","element.className.baseVal":"element.className.baseVal"},"shortpath":"file"},"description":"<p>Set className value</p>","params":[{"type":{"names":["HTMLElement","SVGElement"]},"description":"<p>target element</p>","name":"element"},{"type":{"names":["string","Array.<string>"]},"description":"<p>class names</p>","name":"cssClass"}],"name":"setClassName","longname":"setClassName","kind":"function","scope":"global","___id":"T000002R000074","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"setClassName","signature":"<span class=\"signature\">(element, cssClass)</span><span class=\"type-signature\"></span>","ancestors":[]},{"comment":"/**\n * Toggle css class\n * @param {(HTMLElement|SVGElement)} element - target element\n * @param {...string} cssClass - css classes to toggle\n * @api\n */","meta":{"range":[3170,3712],"filename":"domutil.js","lineno":137,"path":"/Users/minhyeong/Project/dom/src","code":{"id":"astnode100000967","name":"exports.toggleClass","type":"FunctionDeclaration","paramnames":["element"]},"shortpath":"file"},"description":"<p>Toggle css class</p>","params":[{"type":{"names":["HTMLElement","SVGElement"]},"description":"<p>target element</p>","name":"element"},{"type":{"names":["string"]},"variable":true,"description":"<p>css classes to toggle</p>","name":"cssClass"}],"tags":[{"originalTitle":"api","title":"api","text":""}],"name":"toggleClass","longname":"toggleClass","kind":"function","scope":"global","___id":"T000002R000087","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"toggleClass","signature":"<span class=\"signature\">(element, &hellip;cssClass)</span><span class=\"type-signature\"></span>","ancestors":[]},{"comment":"/**\n * Unbind DOM events\n * @param {HTMLElement} element - element to unbind events\n * @param {string} type - events name\n * @param {function} handler - handler function or context for handler\n *  method\n */","meta":{"range":[3276,3746],"filename":"domevent.js","lineno":118,"path":"/Users/minhyeong/Project/dom/src","code":{"id":"astnode100000243","name":"unbindEvent","type":"FunctionDeclaration","paramnames":["element","type","handler"]},"vars":{"events":"unbindEvent~events","items":"unbindEvent~items","":null},"shortpath":"file"},"description":"<p>Unbind DOM events</p>","params":[{"type":{"names":["HTMLElement"]},"description":"<p>element to unbind events</p>","name":"element"},{"type":{"names":["string"]},"description":"<p>events name</p>","name":"type"},{"type":{"names":["function"]},"description":"<p>handler function or context for handler<br> method</p>","name":"handler"}],"name":"unbindEvent","longname":"unbindEvent","kind":"function","scope":"global","___id":"T000002R000022","___s":true,"attribs":"<span class=\"type-signature\"></span>","id":"unbindEvent","signature":"<span class=\"signature\">(element, type, handler)</span><span class=\"type-signature\"></span>","ancestors":[]}],"mixins":[],"modules":[],"namespaces":[{"comment":"/** @namespace tui */","meta":{"range":[112,133],"filename":"index.js","lineno":5,"path":"/Users/minhyeong/Project/dom/src","code":{},"shortpath":"file"},"kind":"namespace","name":"tui","longname":"tui","scope":"global","___id":"T000002R000206","___s":true,"attribs":"","id":"tui","ancestors":[]},{"comment":"/** @namespace tui.dom */","meta":{"range":[134,159],"filename":"index.js","lineno":6,"path":"/Users/minhyeong/Project/dom/src","code":{},"shortpath":"file"},"kind":"namespace","name":"dom","memberof":"tui","longname":"tui.dom","scope":"static","___id":"T000002R000207","___s":true,"attribs":"","id":"dom","ancestors":["<a href=\"tui.html\">tui</a>."],"methods":[{"comment":"/**\n * Add css class to element\n * @param {(HTMLElement|SVGElement)} element - target element\n * @param {...string} cssClass - css classes to add\n * @name addClass\n * @memberof tui.dom\n * @function\n * @api\n */","meta":{"range":[2193,2402],"filename":"domutil.js","lineno":94,"path":"/Users/minhyeong/Project/dom/src","code":{},"shortpath":"file"},"description":"<p>Add css class to element</p>","params":[{"type":{"names":["HTMLElement","SVGElement"]},"description":"<p>target element</p>","name":"element"},{"type":{"names":["string"]},"variable":true,"description":"<p>css classes to add</p>","name":"cssClass"}],"name":"addClass","memberof":"tui.dom","kind":"function","tags":[{"originalTitle":"api","title":"api","text":""}],"scope":"static","longname":"tui.dom.addClass","___id":"T000002R000079","___s":true,"attribs":"<span class=\"type-signature\"><span class=\"icon green\">static</span> </span>","id":".addClass","signature":"<span class=\"signature\">(element, &hellip;cssClass)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"tui.html\">tui</a>","<a href=\"tui.dom.html\">.dom</a>."]},{"comment":"/**\n * Check mouse was leave event element with ignoreing child nodes\n * @param {HTMLElement} element - element to check\n * @param {MouseEvent} e - mouse event\n * @returns {boolean} whether mouse leave element?\n * @name checkMouse\n * @memberof tui.dom\n * @function\n * @api\n */","meta":{"range":[5937,6213],"filename":"domevent.js","lineno":220,"path":"/Users/minhyeong/Project/dom/src","code":{},"shortpath":"file"},"description":"<p>Check mouse was leave event element with ignoreing child nodes</p>","params":[{"type":{"names":["HTMLElement"]},"description":"<p>element to check</p>","name":"element"},{"type":{"names":["MouseEvent"]},"description":"<p>mouse event</p>","name":"e"}],"returns":[{"type":{"names":["boolean"]},"description":"<p>whether mouse leave element?</p>"}],"name":"checkMouse","memberof":"tui.dom","kind":"function","tags":[{"originalTitle":"api","title":"api","text":""}],"scope":"static","longname":"tui.dom.checkMouse","___id":"T000002R000035","___s":true,"attribs":"<span class=\"type-signature\"><span class=\"icon green\">static</span> </span>","id":".checkMouse","signature":"<span class=\"signature\">(element, e)</span><span class=\"type-signature\"> &rarr; {boolean}</span>","ancestors":["<a href=\"tui.html\">tui</a>","<a href=\"tui.dom.html\">.dom</a>."]},{"comment":"/**\n * Find parent element recursively\n * @param {HTMLElement} element - base element to start find\n * @param {string} selector - selector string for find\n * @returns {HTMLElement} - element finded or null\n * @name closest\n * @memberof tui.dom\n * @function\n * @api\n */","meta":{"range":[8403,8671],"filename":"domutil.js","lineno":355,"path":"/Users/minhyeong/Project/dom/src","code":{},"shortpath":"file"},"description":"<p>Find parent element recursively</p>","params":[{"type":{"names":["HTMLElement"]},"description":"<p>base element to start find</p>","name":"element"},{"type":{"names":["string"]},"description":"<p>selector string for find</p>","name":"selector"}],"returns":[{"type":{"names":["HTMLElement"]},"description":"<ul>\n<li>element finded or null</li>\n</ul>"}],"name":"closest","memberof":"tui.dom","kind":"function","tags":[{"originalTitle":"api","title":"api","text":""}],"scope":"static","longname":"tui.dom.closest","___id":"T000002R000158","___s":true,"attribs":"<span class=\"type-signature\"><span class=\"icon green\">static</span> </span>","id":".closest","signature":"<span class=\"signature\">(element, selector)</span><span class=\"type-signature\"> &rarr; {HTMLElement}</span>","ancestors":["<a href=\"tui.html\">tui</a>","<a href=\"tui.dom.html\">.dom</a>."]},{"comment":"/**\n * Setting element style\n * @param {(HTMLElement|SVGElement)} element - element to setting style\n * @param {(string|object)} key - style prop name or {prop: value} pair object\n * @param {string} [value] - style value\n * @name css\n * @memberof tui.dom\n * @function\n * @api\n */","meta":{"range":[309,588],"filename":"domutil.js","lineno":11,"path":"/Users/minhyeong/Project/dom/src","code":{},"shortpath":"file"},"description":"<p>Setting element style</p>","params":[{"type":{"names":["HTMLElement","SVGElement"]},"description":"<p>element to setting style</p>","name":"element"},{"type":{"names":["string","object"]},"description":"<p>style prop name or {prop: value} pair object</p>","name":"key"},{"type":{"names":["string"]},"optional":true,"description":"<p>style value</p>","name":"value"}],"name":"css","memberof":"tui.dom","kind":"function","tags":[{"originalTitle":"api","title":"api","text":""}],"scope":"static","longname":"tui.dom.css","___id":"T000002R000061","___s":true,"attribs":"<span class=\"type-signature\"><span class=\"icon green\">static</span> </span>","id":".css","signature":"<span class=\"signature\">(element, key, value<span class=\"signature-attributes\">opt</span>)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"tui.html\">tui</a>","<a href=\"tui.dom.html\">.dom</a>."]},{"comment":"/**\n * Disable browser's text selection behaviors.\n * @param {HTMLElement} [el] - target element. if not supplied, use `document`\n * @name disableTextSelection\n * @memberof tui.dom\n * @function\n * @api\n */","meta":{"range":[11274,11479],"filename":"domutil.js","lineno":493,"path":"/Users/minhyeong/Project/dom/src","code":{},"shortpath":"file"},"description":"<p>Disable browser's text selection behaviors.</p>","params":[{"type":{"names":["HTMLElement"]},"optional":true,"description":"<p>target element. if not supplied, use <code>document</code></p>","name":"el"}],"name":"disableTextSelection","memberof":"tui.dom","kind":"function","tags":[{"originalTitle":"api","title":"api","text":""}],"scope":"static","longname":"tui.dom.disableTextSelection","___id":"T000002R000186","___s":true,"attribs":"<span class=\"type-signature\"><span class=\"icon green\">static</span> </span>","id":".disableTextSelection","signature":"<span class=\"signature\">(el<span class=\"signature-attributes\">opt</span>)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"tui.html\">tui</a>","<a href=\"tui.dom.html\">.dom</a>."]},{"comment":"/**\n * Enable browser's text selection behaviors.\n * @param {HTMLElement} [el] - target element. if not supplied, use `document`\n * @name enableTextSelection\n * @memberof tui.dom\n * @function\n * @api\n */","meta":{"range":[11846,12049],"filename":"domutil.js","lineno":514,"path":"/Users/minhyeong/Project/dom/src","code":{},"shortpath":"file"},"description":"<p>Enable browser's text selection behaviors.</p>","params":[{"type":{"names":["HTMLElement"]},"optional":true,"description":"<p>target element. if not supplied, use <code>document</code></p>","name":"el"}],"name":"enableTextSelection","memberof":"tui.dom","kind":"function","tags":[{"originalTitle":"api","title":"api","text":""}],"scope":"static","longname":"tui.dom.enableTextSelection","___id":"T000002R000194","___s":true,"attribs":"<span class=\"type-signature\"><span class=\"icon green\">static</span> </span>","id":".enableTextSelection","signature":"<span class=\"signature\">(el<span class=\"signature-attributes\">opt</span>)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"tui.html\">tui</a>","<a href=\"tui.dom.html\">.dom</a>."]},{"comment":"/**\n * Find single element\n * @param {(HTMLElement|string)} [element=document] - base element to find\n * @param {string} [selector] - css selector\n * @returns {HTMLElement}\n * @name find\n * @memberof tui.dom\n * @function\n * @api\n */","meta":{"range":[9011,9243],"filename":"domutil.js","lineno":384,"path":"/Users/minhyeong/Project/dom/src","code":{},"shortpath":"file"},"description":"<p>Find single element</p>","params":[{"type":{"names":["HTMLElement","string"]},"optional":true,"defaultvalue":"document","description":"<p>base element to find</p>","name":"element"},{"type":{"names":["string"]},"optional":true,"description":"<p>css selector</p>","name":"selector"}],"returns":[{"type":{"names":["HTMLElement"]}}],"name":"find","memberof":"tui.dom","kind":"function","tags":[{"originalTitle":"api","title":"api","text":""}],"scope":"static","longname":"tui.dom.find","___id":"T000002R000163","___s":true,"attribs":"<span class=\"type-signature\"><span class=\"icon green\">static</span> </span>","id":".find","signature":"<span class=\"signature\">(element<span class=\"signature-attributes\">opt</span>, selector<span class=\"signature-attributes\">opt</span>)</span><span class=\"type-signature\"> &rarr; {HTMLElement}</span>","ancestors":["<a href=\"tui.html\">tui</a>","<a href=\"tui.dom.html\">.dom</a>."]},{"comment":"/**\n * Find multiple element\n * @param {(HTMLElement|string)} [element=document] - base element to\n *  find\n * @param {string} [selector] - css selector\n * @returns {HTMLElement[]}\n * @name findAll\n * @memberof tui.dom\n * @function\n * @api\n */","meta":{"range":[9422,9665],"filename":"domutil.js","lineno":402,"path":"/Users/minhyeong/Project/dom/src","code":{},"shortpath":"file"},"description":"<p>Find multiple element</p>","params":[{"type":{"names":["HTMLElement","string"]},"optional":true,"defaultvalue":"document","description":"<p>base element to<br> find</p>","name":"element"},{"type":{"names":["string"]},"optional":true,"description":"<p>css selector</p>","name":"selector"}],"returns":[{"type":{"names":["Array.<HTMLElement>"]}}],"name":"findAll","memberof":"tui.dom","kind":"function","tags":[{"originalTitle":"api","title":"api","text":""}],"scope":"static","longname":"tui.dom.findAll","___id":"T000002R000166","___s":true,"attribs":"<span class=\"type-signature\"><span class=\"icon green\">static</span> </span>","id":".findAll","signature":"<span class=\"signature\">(element<span class=\"signature-attributes\">opt</span>, selector<span class=\"signature-attributes\">opt</span>)</span><span class=\"type-signature\"> &rarr; {Array.&lt;HTMLElement>}</span>","ancestors":["<a href=\"tui.html\">tui</a>","<a href=\"tui.dom.html\">.dom</a>."]},{"comment":"/**\n * Get HTML element's design classes.\n * @param {(HTMLElement|SVGElement)} element target element\n * @returns {string} element css class name\n * @name getClass\n * @memberof tui.dom\n * @function\n * @api\n */","meta":{"range":[820,1029],"filename":"domutil.js","lineno":35,"path":"/Users/minhyeong/Project/dom/src","code":{},"shortpath":"file"},"description":"<p>Get HTML element's design classes.</p>","params":[{"type":{"names":["HTMLElement","SVGElement"]},"description":"<p>target element</p>","name":"element"}],"returns":[{"type":{"names":["string"]},"description":"<p>element css class name</p>"}],"name":"getClass","memberof":"tui.dom","kind":"function","tags":[{"originalTitle":"api","title":"api","text":""}],"scope":"static","longname":"tui.dom.getClass","___id":"T000002R000067","___s":true,"attribs":"<span class=\"type-signature\"><span class=\"icon green\">static</span> </span>","id":".getClass","signature":"<span class=\"signature\">(element)</span><span class=\"type-signature\"> &rarr; {string}</span>","ancestors":["<a href=\"tui.html\">tui</a>","<a href=\"tui.dom.html\">.dom</a>."]},{"comment":"/**\n * Get data value from data-attribute\n * @param {HTMLElement} element - target element\n * @param {string} key - key\n * @returns {string} value\n * @name getData\n * @memberof tui.dom\n * @function\n * @api\n */","meta":{"range":[5728,5937],"filename":"domutil.js","lineno":248,"path":"/Users/minhyeong/Project/dom/src","code":{},"shortpath":"file"},"description":"<p>Get data value from data-attribute</p>","params":[{"type":{"names":["HTMLElement"]},"description":"<p>target element</p>","name":"element"},{"type":{"names":["string"]},"description":"<p>key</p>","name":"key"}],"returns":[{"type":{"names":["string"]},"description":"<p>value</p>"}],"name":"getData","memberof":"tui.dom","kind":"function","tags":[{"originalTitle":"api","title":"api","text":""}],"scope":"static","longname":"tui.dom.getData","___id":"T000002R000123","___s":true,"attribs":"<span class=\"type-signature\"><span class=\"icon green\">static</span> </span>","id":".getData","signature":"<span class=\"signature\">(element, key)</span><span class=\"type-signature\"> &rarr; {string}</span>","ancestors":["<a href=\"tui.html\">tui</a>","<a href=\"tui.dom.html\">.dom</a>."]},{"comment":"/**\n * Normalize mouse event's button attributes.\n *\n * Can detect which button is clicked by this method.\n *\n * Meaning of return numbers\n *\n * - 0: primary mouse button\n * - 1: wheel button or center button\n * - 2: secondary mouse button\n * @param {MouseEvent} mouseEvent - The mouse event object want to know.\n * @returns {number} - The value of meaning which button is clicked?\n * @name getMouseButton\n * @memberof tui.dom\n * @function\n * @api\n */","meta":{"range":[6538,6989],"filename":"domevent.js","lineno":248,"path":"/Users/minhyeong/Project/dom/src","code":{},"shortpath":"file"},"description":"<p>Normalize mouse event's button attributes.</p>\n<p>Can detect which button is clicked by this method.</p>\n<p>Meaning of return numbers</p>\n<ul>\n<li>0: primary mouse button</li>\n<li>1: wheel button or center button</li>\n<li>2: secondary mouse button</li>\n</ul>","params":[{"type":{"names":["MouseEvent"]},"description":"<p>The mouse event object want to know.</p>","name":"mouseEvent"}],"returns":[{"type":{"names":["number"]},"description":"<ul>\n<li>The value of meaning which button is clicked?</li>\n</ul>"}],"name":"getMouseButton","memberof":"tui.dom","kind":"function","tags":[{"originalTitle":"api","title":"api","text":""}],"scope":"static","longname":"tui.dom.getMouseButton","___id":"T000002R000040","___s":true,"attribs":"<span class=\"type-signature\"><span class=\"icon green\">static</span> </span>","id":".getMouseButton","signature":"<span class=\"signature\">(mouseEvent)</span><span class=\"type-signature\"> &rarr; {number}</span>","ancestors":["<a href=\"tui.html\">tui</a>","<a href=\"tui.dom.html\">.dom</a>."]},{"comment":"/**\n * Get mouse position from mouse event\n *\n * If supplied relatveElement parameter then return relative position based on\n *  element\n * @param {(MouseEvent|object|number[])} position - mouse position object\n * @param {HTMLElement} relativeElement HTML element that calculate relative\n *  position\n * @returns {number[]} mouse position\n * @name getMousePosition\n * @memberof tui.dom\n * @function\n * @api\n */","meta":{"range":[7507,7917],"filename":"domevent.js","lineno":286,"path":"/Users/minhyeong/Project/dom/src","code":{},"shortpath":"file"},"description":"<p>Get mouse position from mouse event</p>\n<p>If supplied relatveElement parameter then return relative position based on<br> element</p>","params":[{"type":{"names":["MouseEvent","object","Array.<number>"]},"description":"<p>mouse position object</p>","name":"position"},{"type":{"names":["HTMLElement"]},"description":"<p>HTML element that calculate relative<br> position</p>","name":"relativeElement"}],"returns":[{"type":{"names":["Array.<number>"]},"description":"<p>mouse position</p>"}],"name":"getMousePosition","memberof":"tui.dom","kind":"function","tags":[{"originalTitle":"api","title":"api","text":""}],"scope":"static","longname":"tui.dom.getMousePosition","___id":"T000002R000047","___s":true,"attribs":"<span class=\"type-signature\"><span class=\"icon green\">static</span> </span>","id":".getMousePosition","signature":"<span class=\"signature\">(position, relativeElement)</span><span class=\"type-signature\"> &rarr; {Array.&lt;number>}</span>","ancestors":["<a href=\"tui.html\">tui</a>","<a href=\"tui.dom.html\">.dom</a>."]},{"comment":"/**\n * getBoundingClientRect polyfill\n * @param {HTMLElement} element - target element\n * @returns {object} rect object\n * @name getRect\n * @memberof tui.dom\n * @function\n * @api\n */","meta":{"range":[4432,4614],"filename":"domutil.js","lineno":192,"path":"/Users/minhyeong/Project/dom/src","code":{},"shortpath":"file"},"description":"<p>getBoundingClientRect polyfill</p>","params":[{"type":{"names":["HTMLElement"]},"description":"<p>target element</p>","name":"element"}],"returns":[{"type":{"names":["object"]},"description":"<p>rect object</p>"}],"name":"getRect","memberof":"tui.dom","kind":"function","tags":[{"originalTitle":"api","title":"api","text":""}],"scope":"static","longname":"tui.dom.getRect","___id":"T000002R000099","___s":true,"attribs":"<span class=\"type-signature\"><span class=\"icon green\">static</span> </span>","id":".getRect","signature":"<span class=\"signature\">(element)</span><span class=\"type-signature\"> &rarr; {object}</span>","ancestors":["<a href=\"tui.html\">tui</a>","<a href=\"tui.dom.html\">.dom</a>."]},{"comment":"/**\n * Check element has specific css class\n * @param {(HTMLElement|SVGElement)} element - target element\n * @param {string} cssClass - css class\n * @returns {boolean}\n * @name hasClass\n * @memberof tui.dom\n * @function\n * @api\n */","meta":{"range":[1271,1502],"filename":"domutil.js","lineno":56,"path":"/Users/minhyeong/Project/dom/src","code":{},"shortpath":"file"},"description":"<p>Check element has specific css class</p>","params":[{"type":{"names":["HTMLElement","SVGElement"]},"description":"<p>target element</p>","name":"element"},{"type":{"names":["string"]},"description":"<p>css class</p>","name":"cssClass"}],"returns":[{"type":{"names":["boolean"]}}],"name":"hasClass","memberof":"tui.dom","kind":"function","tags":[{"originalTitle":"api","title":"api","text":""}],"scope":"static","longname":"tui.dom.hasClass","___id":"T000002R000070","___s":true,"attribs":"<span class=\"type-signature\"><span class=\"icon green\">static</span> </span>","id":".hasClass","signature":"<span class=\"signature\">(element, cssClass)</span><span class=\"type-signature\"> &rarr; {boolean}</span>","ancestors":["<a href=\"tui.html\">tui</a>","<a href=\"tui.dom.html\">.dom</a>."]},{"comment":"/**\n * Insert element to next of target element\n * @param {HTMLElement} element - html element to insert\n * @param {HTMLElement} target - target element\n * @name insertAfter\n * @memberof tui.dom\n * @function\n * @api\n */","meta":{"range":[12707,12926],"filename":"domutil.js","lineno":548,"path":"/Users/minhyeong/Project/dom/src","code":{},"shortpath":"file"},"description":"<p>Insert element to next of target element</p>","params":[{"type":{"names":["HTMLElement"]},"description":"<p>html element to insert</p>","name":"element"},{"type":{"names":["HTMLElement"]},"description":"<p>target element</p>","name":"target"}],"name":"insertAfter","memberof":"tui.dom","kind":"function","tags":[{"originalTitle":"api","title":"api","text":""}],"scope":"static","longname":"tui.dom.insertAfter","___id":"T000002R000202","___s":true,"attribs":"<span class=\"type-signature\"><span class=\"icon green\">static</span> </span>","id":".insertAfter","signature":"<span class=\"signature\">(element, target)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"tui.html\">tui</a>","<a href=\"tui.dom.html\">.dom</a>."]},{"comment":"/**\n * Check element match selector\n * @param {HTMLElement} element - element to check\n * @param {string} selector - selector to check\n * @returns {boolean} is selector matched to element?\n * @name matches\n * @memberof tui.dom\n * @function\n * @api\n */","meta":{"range":[8053,8304],"filename":"domutil.js","lineno":341,"path":"/Users/minhyeong/Project/dom/src","code":{},"shortpath":"file"},"description":"<p>Check element match selector</p>","params":[{"type":{"names":["HTMLElement"]},"description":"<p>element to check</p>","name":"element"},{"type":{"names":["string"]},"description":"<p>selector to check</p>","name":"selector"}],"returns":[{"type":{"names":["boolean"]},"description":"<p>is selector matched to element?</p>"}],"name":"matches","memberof":"tui.dom","kind":"function","tags":[{"originalTitle":"api","title":"api","text":""}],"scope":"static","longname":"tui.dom.matches","___id":"T000002R000155","___s":true,"attribs":"<span class=\"type-signature\"><span class=\"icon green\">static</span> </span>","id":".matches","signature":"<span class=\"signature\">(element, selector)</span><span class=\"type-signature\"> &rarr; {boolean}</span>","ancestors":["<a href=\"tui.html\">tui</a>","<a href=\"tui.dom.html\">.dom</a>."]},{"comment":"/**\n * Unbind DOM events\n * @param {HTMLElement} element - element to unbindbind events\n * @param {(string|object)} types - Space splitted events names or\n *  eventName:handler object\n * @param {(function|object)} handler - handler function or context for handler\n *  method\n * @name off\n * @memberof tui.dom\n * @function\n * @api\n */","meta":{"range":[5292,5625],"filename":"domevent.js","lineno":194,"path":"/Users/minhyeong/Project/dom/src","code":{},"shortpath":"file"},"description":"<p>Unbind DOM events</p>","params":[{"type":{"names":["HTMLElement"]},"description":"<p>element to unbindbind events</p>","name":"element"},{"type":{"names":["string","object"]},"description":"<p>Space splitted events names or<br> eventName:handler object</p>","name":"types"},{"type":{"names":["function","object"]},"description":"<p>handler function or context for handler<br> method</p>","name":"handler"}],"name":"off","memberof":"tui.dom","kind":"function","tags":[{"originalTitle":"api","title":"api","text":""}],"scope":"static","longname":"tui.dom.off","___id":"T000002R000032","___s":true,"attribs":"<span class=\"type-signature\"><span class=\"icon green\">static</span> </span>","id":".off","signature":"<span class=\"signature\">(element, types, handler)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"tui.html\">tui</a>","<a href=\"tui.dom.html\">.dom</a>."]},{"comment":"/**\n * Bind DOM events\n * @param {HTMLElement} element - element to bind events\n * @param {(string|object)} types - Space splitted events names or\n *  eventName:handler object\n * @param {(function|object)} handler - handler function or context for handler\n *  method\n * @param {object} [context] context - context for handler method.\n * @name on\n * @memberof tui.dom\n * @function\n * @api\n */","meta":{"range":[3749,4140],"filename":"domevent.js","lineno":138,"path":"/Users/minhyeong/Project/dom/src","code":{},"shortpath":"file"},"description":"<p>Bind DOM events</p>","params":[{"type":{"names":["HTMLElement"]},"description":"<p>element to bind events</p>","name":"element"},{"type":{"names":["string","object"]},"description":"<p>Space splitted events names or<br> eventName:handler object</p>","name":"types"},{"type":{"names":["function","object"]},"description":"<p>handler function or context for handler<br> method</p>","name":"handler"},{"type":{"names":["object"]},"optional":true,"description":"<p>context - context for handler method.</p>","name":"context"}],"name":"on","memberof":"tui.dom","kind":"function","tags":[{"originalTitle":"api","title":"api","text":""}],"scope":"static","longname":"tui.dom.on","___id":"T000002R000025","___s":true,"attribs":"<span class=\"type-signature\"><span class=\"icon green\">static</span> </span>","id":".on","signature":"<span class=\"signature\">(element, types, handler, context<span class=\"signature-attributes\">opt</span>)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"tui.html\">tui</a>","<a href=\"tui.dom.html\">.dom</a>."]},{"comment":"/**\n * Bind DOM event. this event will unbind after invokes.\n * @param {HTMLElement} element - HTMLElement to bind events.\n * @param {(string|object)} types - Space splitted events names or\n *  eventName:handler object.\n * @param {*} handler - handler function or context for handler method.\n * @param {*} [context] - context object for handler method.\n * @name once\n * @memberof tui.dom\n * @function\n * @api\n */","meta":{"range":[4474,4886],"filename":"domevent.js","lineno":165,"path":"/Users/minhyeong/Project/dom/src","code":{},"shortpath":"file"},"description":"<p>Bind DOM event. this event will unbind after invokes.</p>","params":[{"type":{"names":["HTMLElement"]},"description":"<p>HTMLElement to bind events.</p>","name":"element"},{"type":{"names":["string","object"]},"description":"<p>Space splitted events names or<br> eventName:handler object.</p>","name":"types"},{"type":{"names":["*"]},"description":"<p>handler function or context for handler method.</p>","name":"handler"},{"type":{"names":["*"]},"optional":true,"description":"<p>context object for handler method.</p>","name":"context"}],"name":"once","memberof":"tui.dom","kind":"function","tags":[{"originalTitle":"api","title":"api","text":""}],"scope":"static","longname":"tui.dom.once","___id":"T000002R000028","___s":true,"attribs":"<span class=\"type-signature\"><span class=\"icon green\">static</span> </span>","id":".once","signature":"<span class=\"signature\">(element, types, handler, context<span class=\"signature-attributes\">opt</span>)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"tui.html\">tui</a>","<a href=\"tui.dom.html\">.dom</a>."]},{"comment":"/**\n * Prevent default action\n * @param {Event} e - event object\n * @name preventDefault\n * @memberof tui.dom\n * @function\n * @api\n */","meta":{"range":[10167,10301],"filename":"domutil.js","lineno":439,"path":"/Users/minhyeong/Project/dom/src","code":{},"shortpath":"file"},"description":"<p>Prevent default action</p>","params":[{"type":{"names":["Event"]},"description":"<p>event object</p>","name":"e"}],"name":"preventDefault","memberof":"tui.dom","kind":"function","tags":[{"originalTitle":"api","title":"api","text":""}],"scope":"static","longname":"tui.dom.preventDefault","___id":"T000002R000173","___s":true,"attribs":"<span class=\"type-signature\"><span class=\"icon green\">static</span> </span>","id":".preventDefault","signature":"<span class=\"signature\">(e)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"tui.html\">tui</a>","<a href=\"tui.dom.html\">.dom</a>."]},{"comment":"/**\n * Remove css class from element\n * @param {(HTMLElement|SVGElement)} element - target element\n * @param {...string} cssClass - css classes to remove\n * @name removeClass\n * @memberof tui.dom\n * @function\n * @api\n */","meta":{"range":[3714,3934],"filename":"domutil.js","lineno":162,"path":"/Users/minhyeong/Project/dom/src","code":{},"shortpath":"file"},"description":"<p>Remove css class from element</p>","params":[{"type":{"names":["HTMLElement","SVGElement"]},"description":"<p>target element</p>","name":"element"},{"type":{"names":["string"]},"variable":true,"description":"<p>css classes to remove</p>","name":"cssClass"}],"name":"removeClass","memberof":"tui.dom","kind":"function","tags":[{"originalTitle":"api","title":"api","text":""}],"scope":"static","longname":"tui.dom.removeClass","___id":"T000002R000092","___s":true,"attribs":"<span class=\"type-signature\"><span class=\"icon green\">static</span> </span>","id":".removeClass","signature":"<span class=\"signature\">(element, &hellip;cssClass)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"tui.html\">tui</a>","<a href=\"tui.dom.html\">.dom</a>."]},{"comment":"/**\n * Remove data property\n * @param {HTMLElement} element - target element\n * @param {string} key - key\n * @name removeData\n * @memberof tui.dom\n * @function\n * @api\n */","meta":{"range":[6156,6327],"filename":"domutil.js","lineno":268,"path":"/Users/minhyeong/Project/dom/src","code":{},"shortpath":"file"},"description":"<p>Remove data property</p>","params":[{"type":{"names":["HTMLElement"]},"description":"<p>target element</p>","name":"element"},{"type":{"names":["string"]},"description":"<p>key</p>","name":"key"}],"name":"removeData","memberof":"tui.dom","kind":"function","tags":[{"originalTitle":"api","title":"api","text":""}],"scope":"static","longname":"tui.dom.removeData","___id":"T000002R000127","___s":true,"attribs":"<span class=\"type-signature\"><span class=\"icon green\">static</span> </span>","id":".removeData","signature":"<span class=\"signature\">(element, key)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"tui.html\">tui</a>","<a href=\"tui.dom.html\">.dom</a>."]},{"comment":"/**\n * Remove element from parent node.\n * @param {HTMLElement} element - element to remove.\n * @name removeElement\n * @memberof tui.dom\n * @function\n * @api\n */","meta":{"range":[6562,6723],"filename":"domutil.js","lineno":289,"path":"/Users/minhyeong/Project/dom/src","code":{},"shortpath":"file"},"description":"<p>Remove element from parent node.</p>","params":[{"type":{"names":["HTMLElement"]},"description":"<p>element to remove.</p>","name":"element"}],"name":"removeElement","memberof":"tui.dom","kind":"function","tags":[{"originalTitle":"api","title":"api","text":""}],"scope":"static","longname":"tui.dom.removeElement","___id":"T000002R000131","___s":true,"attribs":"<span class=\"type-signature\"><span class=\"icon green\">static</span> </span>","id":".removeElement","signature":"<span class=\"signature\">(element)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"tui.html\">tui</a>","<a href=\"tui.dom.html\">.dom</a>."]},{"comment":"/**\n * Set element bound\n * @param {HTMLElement} element - element to change bound\n * @param {object} bound - bound object\n * @param {number} [bound.top] - top pixel\n * @param {number} [bound.right] - right pixel\n * @param {number} [bound.bottom] - bottom pixel\n * @param {number} [bound.left] - left pixel\n * @param {number} [bound.width] - width pixel\n * @param {number} [bound.height] - height pixel\n * @name setBound\n * @memberof tui.dom\n * @function\n * @api\n */","meta":{"range":[6864,7330],"filename":"domutil.js","lineno":303,"path":"/Users/minhyeong/Project/dom/src","code":{},"shortpath":"file"},"description":"<p>Set element bound</p>","params":[{"type":{"names":["HTMLElement"]},"description":"<p>element to change bound</p>","name":"element"},{"type":{"names":["object"]},"description":"<p>bound object</p>","name":"bound"},{"type":{"names":["number"]},"optional":true,"description":"<p>top pixel</p>","name":"bound.top"},{"type":{"names":["number"]},"optional":true,"description":"<p>right pixel</p>","name":"bound.right"},{"type":{"names":["number"]},"optional":true,"description":"<p>bottom pixel</p>","name":"bound.bottom"},{"type":{"names":["number"]},"optional":true,"description":"<p>left pixel</p>","name":"bound.left"},{"type":{"names":["number"]},"optional":true,"description":"<p>width pixel</p>","name":"bound.width"},{"type":{"names":["number"]},"optional":true,"description":"<p>height pixel</p>","name":"bound.height"}],"name":"setBound","memberof":"tui.dom","kind":"function","tags":[{"originalTitle":"api","title":"api","text":""}],"scope":"static","longname":"tui.dom.setBound","___id":"T000002R000134","___s":true,"attribs":"<span class=\"type-signature\"><span class=\"icon green\">static</span> </span>","id":".setBound","signature":"<span class=\"signature\">(element, bound)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"tui.html\">tui</a>","<a href=\"tui.dom.html\">.dom</a>."]},{"comment":"/**\n * Set data attribute to target element\n * @param {HTMLElement} element - element to set data attribute\n * @param {string} key - key\n * @param {string} value - value\n * @name setData\n * @memberof tui.dom\n * @function\n * @api\n */","meta":{"range":[5252,5484],"filename":"domutil.js","lineno":226,"path":"/Users/minhyeong/Project/dom/src","code":{},"shortpath":"file"},"description":"<p>Set data attribute to target element</p>","params":[{"type":{"names":["HTMLElement"]},"description":"<p>element to set data attribute</p>","name":"element"},{"type":{"names":["string"]},"description":"<p>key</p>","name":"key"},{"type":{"names":["string"]},"description":"<p>value</p>","name":"value"}],"name":"setData","memberof":"tui.dom","kind":"function","tags":[{"originalTitle":"api","title":"api","text":""}],"scope":"static","longname":"tui.dom.setData","___id":"T000002R000118","___s":true,"attribs":"<span class=\"type-signature\"><span class=\"icon green\">static</span> </span>","id":".setData","signature":"<span class=\"signature\">(element, key, value)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"tui.html\">tui</a>","<a href=\"tui.dom.html\">.dom</a>."]},{"comment":"/**\n * Stop event propagation.\n * @param {Event} e - event object\n * @name stopPropagation\n * @memberof tui.dom\n * @function\n * @api\n */","meta":{"range":[9881,10017],"filename":"domutil.js","lineno":421,"path":"/Users/minhyeong/Project/dom/src","code":{},"shortpath":"file"},"description":"<p>Stop event propagation.</p>","params":[{"type":{"names":["Event"]},"description":"<p>event object</p>","name":"e"}],"name":"stopPropagation","memberof":"tui.dom","kind":"function","tags":[{"originalTitle":"api","title":"api","text":""}],"scope":"static","longname":"tui.dom.stopPropagation","___id":"T000002R000169","___s":true,"attribs":"<span class=\"type-signature\"><span class=\"icon green\">static</span> </span>","id":".stopPropagation","signature":"<span class=\"signature\">(e)</span><span class=\"type-signature\"></span>","ancestors":["<a href=\"tui.html\">tui</a>","<a href=\"tui.dom.html\">.dom</a>."]},{"comment":"/**\n * Check specific CSS style is available.\n * @param {array} props property name to testing\n * @returns {(string|boolean)} return true when property is available\n * @name testCSSProp\n * @memberof tui.dom\n * @function\n * @api\n * @example\n * var props = ['transform', '-webkit-transform'];\n * domutil.testCSSProp(props);    // 'transform'\n */","meta":{"range":[10448,10791],"filename":"domutil.js","lineno":457,"path":"/Users/minhyeong/Project/dom/src","code":{},"shortpath":"file"},"description":"<p>Check specific CSS style is available.</p>","params":[{"type":{"names":["array"]},"description":"<p>property name to testing</p>","name":"props"}],"returns":[{"type":{"names":["string","boolean"]},"description":"<p>return true when property is available</p>"}],"name":"testCSSProp","memberof":"tui.dom","kind":"function","tags":[{"originalTitle":"api","title":"api","text":""}],"examples":[{"caption":"","code":"var props = ['transform', '-webkit-transform'];\ndomutil.testCSSProp(props);    // 'transform'"}],"scope":"static","longname":"tui.dom.testCSSProp","___id":"T000002R000177","___s":true,"attribs":"<span class=\"type-signature\"><span class=\"icon green\">static</span> </span>","id":".testCSSProp","signature":"<span class=\"signature\">(props)</span><span class=\"type-signature\"> &rarr; {string|boolean}</span>","ancestors":["<a href=\"tui.html\">tui</a>","<a href=\"tui.dom.html\">.dom</a>."]},{"comment":"/**\n * Represents the text content of a node and its descendants\n * @param {HTMLElement} element - html element\n * @returns {string} text content\n * @name textContent\n * @memberof tui.dom\n * @function\n * @api\n */","meta":{"range":[12333,12545],"filename":"domutil.js","lineno":531,"path":"/Users/minhyeong/Project/dom/src","code":{},"shortpath":"file"},"description":"<p>Represents the text content of a node and its descendants</p>","params":[{"type":{"names":["HTMLElement"]},"description":"<p>html element</p>","name":"element"}],"returns":[{"type":{"names":["string"]},"description":"<p>text content</p>"}],"name":"textContent","memberof":"tui.dom","kind":"function","tags":[{"originalTitle":"api","title":"api","text":""}],"scope":"static","longname":"tui.dom.textContent","___id":"T000002R000199","___s":true,"attribs":"<span class=\"type-signature\"><span class=\"icon green\">static</span> </span>","id":".textContent","signature":"<span class=\"signature\">(element)</span><span class=\"type-signature\"> &rarr; {string}</span>","ancestors":["<a href=\"tui.html\">tui</a>","<a href=\"tui.dom.html\">.dom</a>."]},{"comment":"/**\n * Convert uppercase letter to hyphen lowercase character\n * @param {string} match - match from String.prototype.replace method\n * @returns {string}\n * @name upperToHyphenLower\n * @memberof tui.dom\n * @function\n * @api\n */","meta":{"range":[4947,5173],"filename":"domutil.js","lineno":213,"path":"/Users/minhyeong/Project/dom/src","code":{},"shortpath":"file"},"description":"<p>Convert uppercase letter to hyphen lowercase character</p>","params":[{"type":{"names":["string"]},"description":"<p>match from String.prototype.replace method</p>","name":"match"}],"returns":[{"type":{"names":["string"]}}],"name":"upperToHyphenLower","memberof":"tui.dom","kind":"function","tags":[{"originalTitle":"api","title":"api","text":""}],"scope":"static","longname":"tui.dom.upperToHyphenLower","___id":"T000002R000116","___s":true,"attribs":"<span class=\"type-signature\"><span class=\"icon green\">static</span> </span>","id":".upperToHyphenLower","signature":"<span class=\"signature\">(match)</span><span class=\"type-signature\"> &rarr; {string}</span>","ancestors":["<a href=\"tui.html\">tui</a>","<a href=\"tui.dom.html\">.dom</a>."]}]}],"interfaces":[],"tutorials":[]})